name: Tests

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            qutip-version: '@dev.major'
            python-version: '3.6'
          - os: windows-latest
            qutip-version: '==4.6.*'
            python-version: '3.10'
          - os: macOS-latest
            qutip-version: '==4.7.*'
            python-version: '3.9'
          - os: ubuntu-latest
            qutip-version: ''
            python-version: '3.7'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install QuTiP from PyPI
      if: ${{ matrix.qutip-version != '' && ! startsWith( matrix.qutip-version, '@') }}
      run: python -m pip install 'qutip${{ matrix.qutip-version }}'

    - name: Install QuTiP from GitHub
      if: ${{ startsWith( matrix.qutip-version, '@') }}
      run: |
        python -m pip install numpy scipy cython
        python -m pip install 'git+https://github.com/qutip/qutip.git${{ matrix.qutip-version }}'

    - name: Install qutip-qip
      # Installing in-place so that coveralls can locate the source code.
      run: |
        pip install -e .[full]
    - name: Test with pytest and generate coverage report
      run: |
        pip install pytest-cov coveralls
        pytest tests --strict-markers --cov=qutip_qip --cov-report=
    - name: Upload to Coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
        COVERALLS_PARALLEL: true
      run: coveralls --service=github

  doctest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -mpip install -r doc/requirements.txt
        pip install .
    - name: Test code snippets in the documentation
      run: |
        cd doc
        make doctest
    - name: Test code examples for the pulse paper
      run: |
        python -m pip install joblib pytest pytest-custom_exit_code
        cd doc/pulse-paper
        pytest *.py --suppress-no-test-exit-code

  finalise:
    name: Finalise coverage reporting
    needs: [test]
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finalise coverage reporting
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          python -m pip install coveralls
          coveralls --service=github --finish
